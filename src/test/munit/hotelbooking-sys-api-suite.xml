<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="hotelbooking-sys-api-suite.xml" />
	<munit:test name="api-main-test" doc:id="cbf1ff3a-75a0-486e-b68c-ee4247f34edf" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="c9b297cf-9245-4f48-b609-a880a56cdc60" >
				<munit:payload value="#[readUrl('classpath://apimaintest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://apimaintest\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to api-main" doc:id="209e208d-8754-4962-b63a-f8278c3ed676" name="api-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="e8f5e631-c94c-4884-b716-cf5b214c5848" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import apimaintest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="getHotels:\soapkit-config-test" doc:id="23e362b4-4491-4804-a4db-270d5d18b3fe" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Get Hotels" doc:id="85433d3c-0b0f-4c52-b73f-cd3ff01e3346" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="3fb1168b-bb41-4a0a-bdc1-b66c8410c359" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/xml --- readUrl('classpath://getHotelssoapkitconfigtest\mock_payload.dwl')]" mediaType="application/xml" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="city" value="#[output application/java --- readUrl('classpath://getHotelssoapkitconfigtest\mock_variable_.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="0f171e27-f537-4a6b-99e2-408e824321a3" >
				<munit:payload value="#[output application/java --- readUrl('classpath://getHotelssoapkitconfigtest\set-event_payload.dwl')]" mediaType="application/java" />
				<munit:attributes value="#[output application/java --- readUrl('classpath://getHotelssoapkitconfigtest\set-event_attributes.dwl')]" mediaType="application/java" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getHotels:\soapkit-config" doc:id="0133a549-2c3c-446a-8615-5a3092c1b25e" name="getHotels:\soapkit-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="1e32ab7c-a051-47a2-8ee8-d0711984ec54" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getHotelssoapkitconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="getRooms:\soapkit-config-test" doc:id="5d0bbdd5-94f2-4fb3-8cd0-9eeb9581a7ef" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Get Room Types of Hotel" doc:id="c46052c6-2811-44bf-b89d-9344bea24c8d" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="f848fae4-5c6f-4f2a-a4c5-931151f3f943" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/xml --- readUrl('classpath://getRoomssoapkitconfigtest\mock_payload.dwl')]" mediaType="application/xml" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="e5de5ac3-4f7f-44a8-80c1-e0e09f88120f" >
				<munit:payload value="#[output application/java --- readUrl('classpath://getRoomssoapkitconfigtest\set-event_payload.dwl')]" mediaType="application/java" />
				<munit:attributes value="#[output application/java --- readUrl('classpath://getRoomssoapkitconfigtest\set-event_attributes.dwl')]" mediaType="application/java" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getRooms:\soapkit-config" doc:id="517207a4-d9dd-4298-9114-3d4f43bd9fe8" name="getRooms:\soapkit-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="f84c88a0-4ceb-40dc-abda-bcba1f8288c0" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getRoomssoapkitconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="bookRooms:\soapkit-config-test" doc:id="0221df73-a367-4a17-a8df-32a9afebd6f2" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Book Rooms" doc:id="3c04f048-af09-4bcb-859c-e0bdbee69a02" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="7983fdb7-f9a3-4861-92b3-a98710fcaf30" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/xml --- readUrl('classpath://bookRoomssoapkitconfigtest\mock_payload.dwl')]" mediaType="application/xml" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="initialPayload" value="#[output application/json --- readUrl('classpath://bookRoomssoapkitconfigtest\mock_variable_.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="f3885d89-9cc8-4595-921c-9ccdd8618385" >
				<munit:payload value="#[output application/java --- readUrl('classpath://bookRoomssoapkitconfigtest\set-event_payload.dwl')]" mediaType="application/java" />
				<munit:attributes value="#[output application/java --- readUrl('classpath://bookRoomssoapkitconfigtest\set-event_attributes.dwl')]" mediaType="application/java" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to bookRooms:\soapkit-config" doc:id="224ff5b2-ad19-4e6e-b8be-5eb52186e0c9" name="bookRooms:\soapkit-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="d9534b91-4930-42a0-b670-a7bc200438c0" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import bookRoomssoapkitconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="cancelBooking:\soapkit-config-test" doc:id="c7d50ea1-ec67-48d2-bd8e-bc3a8ce784e9" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Flow Reference" doc:id="ae2e3fc9-0946-49a5-bbf0-2dc47dd65b67" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c8a389a1-8e52-430d-8741-ae51503bfe9d" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/xml --- readUrl('classpath://cancelBookingsoapkitconfigtest\mock_payload.dwl')]" mediaType="application/xml" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="7809b5cc-5045-43fa-9281-f4370d584efa" >
				<munit:payload value="#[output application/java --- readUrl('classpath://cancelBookingsoapkitconfigtest\set-event_payload.dwl')]" mediaType="application/java" />
				<munit:attributes value="#[output application/java --- readUrl('classpath://cancelBookingsoapkitconfigtest\set-event_attributes.dwl')]" mediaType="application/java" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to cancelBooking:\soapkit-config" doc:id="fd0baba1-d922-4075-bb96-80db15663174" name="cancelBooking:\soapkit-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="d6d4ad45-654e-46a7-87e9-8676bf04f722" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import cancelBookingsoapkitconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
